<?xml version="1.0"?>
<clocks script = "modelToGo.gsl" >
	<timezones>
		Describes the different timezones the various clocks will use
		<timezone name="local" isSystemDefault="true" />
		<timezone name="utc" offset="0" />
		<timezone name="bmt" offset="+1" />
	</timezones>
	<outputtypes>
		Describes the output types that the various clocks may use.
		This mechanism was added in order to avoid re-implementing
		common types for each clock.
		<type name="digits">
			<element>0</element><element>1</element><element>2</element>
			<element>3</element><element>4</element><element>5</element>
			<element>6</element><element>7</element><element>8</element>
			<element>9</element>
		</type>
		<type name="sixdigits">
			<element>0</element><element>1</element><element>2</element>
			<element>3</element><element>4</element><element>5</element>
		</type>
		<type name="hexdigits">
			<element>0</element><element>1</element><element>2</element>
			<element>3</element><element>4</element><element>5</element>
			<element>6</element><element>7</element><element>8</element>
			<element>9</element><element>A</element><element>B</element>
			<element>C</element><element>D</element><element>E</element>
			<element>F</element>
		</type>
	</outputtypes>
	<clock name="localTime" timezone="local" printf="%s%s:%s%s:%s%s">
		Each field here ticks through each element of the type every time the
		specified fraction of the day is passed. The order the fields are listed
		here is the order they are given to the printf function.
		<outputfield name="hourten" dayfraction="5/12" type="digits"/>
		<outputfield name="hourunit" dayfraction="1/24" type="digits"/>
		<outputfield name="minuteten" dayfraction="1/144" type="sixdigits"/>
		<outputfield name="minuteunit" dayfraction="1/1440" type="digits"/>
		<outputfield name="secondten" dayfraction="1/8640" type="sixdigits"/>
		<outputfield name="secondunit" dayfraction="1/86400" type="digits"/>
		<tests>
			<test attime="00:00:00" expect="00:00:00"/>
			<test attime="23:59:59" expect="23:59:59"/>
		</tests>
	</clock>
	<clock name="localDate" timezone="local" printf="%d-%02d-%02d">
		This is a bit of a hack. The date does not fit into the model used for
		the other clocks. The 'name' field is sent verbatim to the go time.Now()
		object as a message. This is tied to the go implementation at the moment.
		<field name="Year"/>
		<field name="Month"/>
		<field name="Day"/>
	</clock>
	<clock name="utc" timezone="utc" printf="%s%s:%s%s:%s%s UT">
		<outputfield name="hourten" dayfraction="5/12" type="digits"/>
		<outputfield name="hourunit" dayfraction="1/24" type="digits"/>
		<outputfield name="minuteten" dayfraction="1/144" type="sixdigits"/>
		<outputfield name="minuteunit" dayfraction="1/1440" type="digits"/>
		<outputfield name="secondten" dayfraction="1/8640" type="sixdigits"/>
		<outputfield name="secondunit" dayfraction="1/86400" type="digits"/>
		<tests>
			<test attime="00:00:00" expect="00:00:00 UT"/>
			<test attime="23:59:59" expect="23:59:59 UT"/>
		</tests>
	</clock>
	<clock name="beatTime" timezone="bmt" printf="@%s%s%s">
		<outputfield name="hundreds" dayfraction="1/10" type="digits"/>
		<outputfield name="tens" dayfraction="1/100" type="digits"/>
		<outputfield name="units" dayfraction="1/1000" type="digits"/>
		<tests>
			<test attime="00:00:00" expect="@000"/>
			<test attime="23:59:59" expect="@999"/>
		</tests>
	</clock>
	<clock name="hexTime" timezone="local" printf="%s_%s%s_%s">
		<outputfield name="hexhours" dayfraction="1/16" type="hexdigits"/>
		<outputfield name="hexminutetens" dayfraction="1/256" type="hexdigits"/>
		<outputfield name="hexminuteunits" dayfraction="1/4096" type="hexdigits"/>
		<outputfield name="hexseconds" dayfraction="1/65536" type="hexdigits"/>
		<tests>
			<test attime="00:00:00" expect="0_00_0"/>
			<test attime="02:59:59" expect="1_FF_F"/>
			<test attime="03:00:00" expect="2_00_0"/>
			<test attime="23:59:59" expect="F_FF_F"/>
		</tests>
	</clock>
	<clock name="bells" timezone="local" printf="%s">
		I didn't make an outputtype for bells or watches so the elements are
		given here in the clock directly.
		<digit name="bell" dayfraction="1/48">
			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>Five bells</element>
			<element>Six bells</element><element>Seven bells</element>

			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>Five bells</element>
			<element>Six bells</element><element>Seven bells</element>

			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>Five bells</element>
			<element>Six bells</element><element>Seven bells</element>

			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>Five bells</element>
			<element>Six bells</element><element>Seven bells</element>

			Note the special handling of the dog watches:
			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>

			<element>Eight bells</element><element>One bell</element>
			<element>Two bells</element><element>Three bells</element>
			<element>Four bells</element><element>Five bells</element>
			<element>Six bells</element><element>Seven bells</element>
		</digit>
		<tests>
			<test attime="00:00:00" expect="Eight bells"/>
			<test attime="00:29:59" expect="Eight bells"/>
			<test attime="00:30:00" expect="One bell"/>
			<test attime="18:45:00" expect="One bell"/>
		</tests>
	</clock>
	<clock name="watch" timezone="local" printf="%s watch">
		<digit name="watch" dayfraction="1/12">
			Had to double up the elements in order to handle the dog watches
			<element>Middle</element><element>Middle</element><element>Morning</element>
			<element>Morning</element><element>Forenoon</element><element>Forenoon</element>
			<element>Afternoon</element><element>Afternoon</element><element>First dog</element>
			<element>Last dog</element><element>First</element><element>First</element>
		</digit>
		<tests>
			<test attime="00:00:00" expect="Middle watch"/>
			<test attime="16:45:00" expect="First dog watch"/>
			<test attime="23:59:59" expect="First watch"/>
		</tests>
	</clock>
</clocks>
